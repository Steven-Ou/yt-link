name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # ---- NEW STEP: Create bin directory ----
      - name: Create Binaries Directory
        run: mkdir -p bin

      # ---- NEW STEP: Download yt-dlp and ffmpeg for macOS ----
      - name: Download Dependencies (macOS)
        if: runner.os == 'macOS'
        working-directory: ./bin
        run: |
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o yt-dlp
          curl -L https://evermeet.cx/ffmpeg/ffmpeg-118897-g1344265435.zip -o ffmpeg.zip
          unzip ffmpeg.zip
          rm ffmpeg.zip
          chmod +x yt-dlp ffmpeg
      
      # ---- NEW STEP: Download yt-dlp and ffmpeg for Windows ----
      - name: Download Dependencies (Windows)
        if: runner.os == 'Windows'
        working-directory: ./bin
        run: |
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe -o yt-dlp.exe
          curl -L https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip -o ffmpeg.zip
          tar -xf ffmpeg.zip
          mv ffmpeg-*/bin/ffmpeg.exe .
          rm -r ffmpeg-*
          rm ffmpeg.zip

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r service/requirements.txt

      - name: Install Root and Frontend Dependencies
        run: npm install && npm install --prefix frontend

      - name: Build and Package Application
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Artifacts to Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
