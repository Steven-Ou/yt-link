name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    
    permissions:
      contents: write

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Build Python Backend EXE (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          cd service
          python -m venv venv
          ./venv/Scripts/activate
          pip install -r requirements.txt
          pip install pyinstaller
          pyinstaller --onefile --noconsole --clean app.py
        shell: bash

      - name: Prepare Assets for Windows Build
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p frontend/build-assets/win/service
          cp service/dist/app.exe frontend/build-assets/win/service/app.exe
        shell: bash

      - name: Install Frontend Dependencies
        run: npm install
        working-directory: ./frontend

      - name: Build Electron App
        run: npm run electron:build -- --publish always
        working-directory: ./frontend
        env:
          IS_ELECTRON: 'true'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            frontend/dist/*.dmg
            frontend/dist/*.zip
            frontend/dist/*.exe
            frontend/dist/*.blockmap
