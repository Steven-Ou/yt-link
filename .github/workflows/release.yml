# .github/workflows/release.yml
# This workflow is corrected to install and build directly inside the frontend directory,
# which is a more robust approach for CI/CD environments and avoids workspace pathing issues.

name: Release

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'service/**'
      - '.github/workflows/release.yml'
      - 'package.json'
      - 'package-lock.json'

jobs:
  # Job 1: Build and Package the application for each OS
  # We are combining the build and package steps to simplify the workflow.
  build_and_package:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      # Cache for pip dependencies
      - name: Cache pip dependencies
        id: cache-pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/service/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Cache for frontend node_modules
      - name: Cache frontend node_modules
        id: cache-frontend-npm
        uses: actions/cache@v4
        with:
          path: ./frontend/node_modules
          key: ${{ runner.os }}-npm-frontend-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-frontend-
      
      # --- THE KEY FIX IS HERE ---
      # We now run all node commands from within the 'frontend' directory.
      - name: Install Dependencies and Build Frontend
        run: |
          cd service && pip install -r requirements.txt
          cd ..
          cd frontend && npm install && npm run build
      
      # Run the package script from within the frontend directory
      - name: Run Electron Packager
        working-directory: ./frontend
        run: npm run package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Rename Artifact for Windows
        if: matrix.os == 'windows-latest'
        run: |
          cd frontend/dist
          $file = Get-ChildItem -Filter *.exe | Select-Object -First 1
          Rename-Item -Path $file.FullName -NewName "yt-link-windows.exe"
          
      - name: Rename Artifact for macOS
        if: matrix.os == 'macos-latest'
        run: |
          cd frontend/dist
          mv *.dmg yt-link-macos.dmg
          
      - name: Rename Artifact for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd frontend/dist
          mv *.AppImage yt-link-linux.AppImage

      - name: Upload Packaged Application
        uses: actions/upload-artifact@v4
        with:
          name: yt-link-${{ matrix.os }}
          path: frontend/dist/*
          retention-days: 7
